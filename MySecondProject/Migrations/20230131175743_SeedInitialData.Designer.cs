// <auto-generated />
using System;
using List_Dal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MySecondProject.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230131175743_SeedInitialData")]
    partial class SeedInitialData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("List_Domain.Models.CustomList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("CustomLists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "List 1",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("List_Domain.Models.EmailConfirmationCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConfirmationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmailConfirmationLeftAttempts")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmailConfirmationCodes");
                });

            modelBuilder.Entity("List_Domain.Models.ToDoTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomListId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueToDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Importance")
                        .HasColumnType("int");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomListId");

                    b.HasIndex("UserId");

                    b.ToTable("ToDoTasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2023, 1, 31, 19, 57, 43, 465, DateTimeKind.Local).AddTicks(9215),
                            Description = "I have to go shopping",
                            DueToDate = new DateTime(2023, 2, 4, 0, 0, 0, 0, DateTimeKind.Local),
                            Importance = 0,
                            IsCompleted = false,
                            IsDeleted = false,
                            IsFavorite = false,
                            Title = "Shop",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2023, 1, 31, 19, 57, 43, 465, DateTimeKind.Local).AddTicks(9248),
                            Description = "I have to learn English",
                            DueToDate = new DateTime(2023, 2, 15, 0, 0, 0, 0, DateTimeKind.Local),
                            Importance = 1,
                            IsCompleted = false,
                            IsDeleted = false,
                            IsFavorite = false,
                            Title = "Learning",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2023, 1, 31, 19, 57, 43, 465, DateTimeKind.Local).AddTicks(9252),
                            Description = "I have to learn Asp.Net Core",
                            DueToDate = new DateTime(2023, 2, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            Importance = 2,
                            IsCompleted = false,
                            IsDeleted = false,
                            IsFavorite = true,
                            Title = "AspNet",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2023, 1, 30, 19, 57, 43, 465, DateTimeKind.Local).AddTicks(9257),
                            CustomListId = 1,
                            Description = "Description",
                            DueToDate = new DateTime(2023, 1, 31, 19, 57, 43, 465, DateTimeKind.Local).AddTicks(9259),
                            Importance = 2,
                            IsCompleted = false,
                            IsDeleted = false,
                            IsFavorite = true,
                            Title = "CustomList Task1",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("List_Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "smeldoc@gmail.com",
                            Name = "Andrii",
                            Password = "PIrgcQjPgUpuyF8l+7CEo2bT+eebTyKYc+f1fDoGjLs="
                        });
                });

            modelBuilder.Entity("List_Domain.Models.CustomList", b =>
                {
                    b.HasOne("List_Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("List_Domain.Models.ToDoTask", b =>
                {
                    b.HasOne("List_Domain.Models.CustomList", "CustomList")
                        .WithMany("Tasks")
                        .HasForeignKey("CustomListId");

                    b.HasOne("List_Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomList");

                    b.Navigation("User");
                });

            modelBuilder.Entity("List_Domain.Models.CustomList", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
